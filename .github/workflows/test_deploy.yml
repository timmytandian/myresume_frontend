name: frontend CI/CD
run-name: ACTOR ${{ github.actor }} - BRANCH ${{ github.ref_name }} - EVENT ${{ github.event_name }}
on: [workflow_dispatch, push]
jobs:
  Test-and-Build:
    runs-on: ubuntu-latest
    
    steps:
      #----------------------------------------------
      #  check-out repo and preview the path
      #----------------------------------------------
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Run pwd and ls
        run: |
          pwd
          ls
      #----------------------------------------------
      #  initialize variable
      #----------------------------------------------
      - name: Set variable value
        id: set_PROJECT_NAME
        run: |
          echo "PROJECT_NAME=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_ENV"
      - name: Use variable value
        id: get_PROJECT_NAME
        run: |
          printf 'the project name is: %s\n' "$PROJECT_NAME"
      - name: Check repository's variable
        id: check_DYNAMODB_TABLE_NAME
        run: |
          echo "the value of DYNAMODB_TABLE_NAME is ${{ vars.DYNAMODB_TABLE_NAME }}"
      #----------------------------------------------
      #  Setup Node.js
      #----------------------------------------------
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.6.2'
      #----------------------------------------------
      #  Cache Node modules
      #----------------------------------------------
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      #----------------------------------------------
      # List sate of Node modules if cache misses
      #----------------------------------------------
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      #----------------------------------------------
      # Install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: npm ci
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests on the JavaScript
        run: npm run test
    
      - name: Run tests on the HTML
        run: gulp
      
      #----------------------------------------------
      # Upload web resources as artifact
      #----------------------------------------------
      - name: Upload web resources as artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-web-resources
          path: |
            src/css/
            src/js/
            src/images/
            src/index.html

      - run: echo "üçè This job's status is ${{ job.status }}."
  
  DeployCodeToS3:
    runs-on: ubuntu-latest
    needs: Test-and-Build
    steps:
      #----------------------------------------------
      #  check-out repo and preview the path
      #----------------------------------------------
      - name: Check out repository code
        uses: actions/checkout@v4
      
      #----------------------------------------------
      #  Artifact download, publish to AWS Lambda Layer
      #----------------------------------------------
      - name: Download the static web artifact
        uses: actions/download-artifact@v4
        with:
          name: static-web-resources

      - name: Job status report
        run: echo "üçè This job's status is ${{ job.status }}."